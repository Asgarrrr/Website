(window.webpackJsonp=window.webpackJsonp||[]).push([[78,15,47,63,68],{380:function(e,t,n){"use strict";n.r(t);n(17),n(36);var r=n(0).a.extend({props:{title:{type:String,required:!0},description:{type:String,required:!1,default:[]}},computed:{getDescriptions:function(){return"string"==typeof this.description?[this.description]:this.description}}}),l=n(10),component=Object(l.a)(r,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{staticClass:"text-black/50 dark:text-white/30"},[t("header",{staticClass:"space-y-2 my-12"},[t("h1",{staticClass:"text-black/90 dark:text-white/90 text-4xl font-semibold"},[e._v("\n      "+e._s(e.title)+"\n    ")]),e._v(" "),e._l(e.getDescriptions,(function(n,r){return t("p",{key:"description-".concat(r)},[e._v("\n      "+e._s(n)+"\n    ")])}))],2),e._v(" "),e._t("default")],2)}),[],!1,null,null,null);t.default=component.exports},381:function(e,t,n){var content=n(386);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,n(81).default)("09a2553a",content,!0,{sourceMap:!1})},385:function(e,t,n){"use strict";n(381)},386:function(e,t,n){var r=n(80)((function(i){return i[1]}));r.push([e.i,".medium-zoom-overlay{z-index:40}.medium-zoom-image.medium-zoom-image--opened{z-index:50}",""]),r.locals={},e.exports=r},387:function(e,t,n){"use strict";n.r(t);n(170);var r=n(0).a.extend({props:{src:{type:String,required:!1,default:null},alt:{type:String,required:!1,default:null},caption:{type:String,required:!1,default:null},imageClass:{type:String,required:!1,default:null},border:{type:Boolean,required:!1,default:!1},zoomable:{type:Boolean,required:!1,default:!0}}}),l=(n(385),n(10)),component=Object(l.a)(r,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("figure",{staticClass:"w-full h-full overflow-hidden"},[t(e.src.endsWith(".gif")?"img":"nuxt-img",{tag:"component",staticClass:"object-cover w-full rounded-md",class:[e.imageClass,e.border&&"border border-black/10 dark:border-white/10"],attrs:{src:e.src,alt:e.alt||e.caption||"image",loading:"lazy",draggable:"false",fit:"cover","data-zoomable":e.zoomable}}),e._v(" "),e.caption?t("figcaption",{staticClass:"text-center mt-3"},[e._v("\n    "+e._s(e.caption)+"\n  ")]):e._e()],1)}),[],!1,null,null,null);t.default=component.exports},391:function(e,t,n){"use strict";n.r(t);var r=n(10),component=Object(r.a)({},(function(){var e=this._self._c;return e("svg",{attrs:{viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{d:"M17.886 9.874L9.89 4.429a2.46 2.46 0 00-2.57-.126c-.4.219-.734.544-.966.942A2.594 2.594 0 006 6.559v10.887c0 .462.123.916.356 1.313.232.396.566.72.965.939a2.46 2.46 0 002.569-.127l7.996-5.445c.343-.233.624-.55.818-.92a2.597 2.597 0 000-2.41 2.536 2.536 0 00-.818-.92v-.002 0z",fill:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"}})])}),[],!1,null,null,null);t.default=component.exports},394:function(e,t,n){"use strict";n.r(t);n(23),n(127);var r=n(0).a.extend({props:{name:{type:String,required:!0},artist:{type:String,required:!1,default:null},url:{type:String,required:!0},image:{type:String,required:!0},nowPlaying:{type:Boolean,required:!1,default:!1},plays:{type:Number,required:!1,default:null}}}),l=n(10),component=Object(l.a)(r,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("SmartLink",{staticClass:"rounded-lg flex items-center gap-4 card-base",class:{"justify-between":null!==e.plays},attrs:{href:e.url,title:e.name,blank:""}},[t("div",{staticClass:"flex space-x-4 truncate items-center"},[t("div",{staticClass:"flex-shrink-0 h-14 w-14 relative"},[t("SmartImage",{staticClass:"rounded-md",attrs:{src:e.image}}),e._v(" "),e.nowPlaying?t("div",{staticClass:"rounded-md flex bg-black/75 inset-0 items-center justify-center absolute",attrs:{title:"Playing now..."}},[t("IconPlay",{staticClass:"h-6 text-neutral-300 w-6"})],1):e._e()],1),e._v(" "),t("div",{staticClass:"flex flex-col truncate"},[t("span",{staticClass:"truncate"},[e._v("\n        "+e._s(e.name)+"\n      ")]),e._v(" "),e.artist?t("span",{staticClass:"text-sm text-black/50 dark:text-white/30 truncate"},[e._v("by "+e._s(e.artist))]):e._e()])]),e._v(" "),e.plays?t("div",{staticClass:"rounded-md text-blue-600 bg-blue-600/10 ring-[0.5px] ring-blue-600/40 px-4 py-1 flex-shrink-0 text-xs"},[e._v("\n    "+e._s(e.plays)+" plays\n  ")]):e._e()])}),[],!1,null,null,null);t.default=component.exports;installComponents(component,{SmartImage:n(264).default,IconPlay:n(391).default,SmartLink:n(169).default})},501:function(e,t,n){"use strict";n.r(t);var r=n(0),l=n(265),o=n(394),d=n(264),c=r.a.extend({components:{Image:d.default,LastFm:o.default,Title:l.default},data:function(){return{images:["https://i.imgur.com/GVCH2f5.png","https://cdn.discordapp.com/attachments/1071595350437134456/1104138416364470293/telechargement.png"],languages:["HTML","CSS","JavaScript","MongoDB","Express","Node.js","Socket.io ( WebSockets )","React.js","Vite.js"],pages:[{title:"Custom Status",url:"/projects/premid/custom-status",description:"Tool that allows you do display whatever you want on your Discord profile with PreMiD! Easy and free!"},{title:"Metadata Creator",url:"/projects/premid/mdcreator",description:"Easy and free to use tool to create PreMiD Presence metadata files easily, without even opening your code editor!"}]}},head:function(){var title="Rogue";return{title:title,meta:this.$prepareMeta({title:title,description:"Custom tools created for your PreMiD experience! Featuring Custom Status and Metadata Creator for free and fresh UI!",image:"https://i.imgur.com/CuVtvKW.png",keywords:"premid, custom, status",url:"https://eggsy.xyz/projects/premid"}),link:[{rel:"canonical",href:"https://eggsy.xyz/projects/premid"}]}}}),h=n(10),component=Object(h.a)(c,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("PageLayout",{staticClass:"space-y-12",attrs:{title:"Rogue",description:"A Javascript dungeon crawler and roguelike-style game where you explore a procedurally generated dungeon"}},[t("SmartFigure",{attrs:{src:e.images[0],border:"",caption:"Yep, currently the game is only a 2D dungeon crawler with a few enemies and items"}}),e._v(" "),t("section",{staticClass:"space-y-4"},[t("Title",{attrs:{size:"2"}},[e._v(" Technologies used ")]),e._v(" "),t("div",{staticClass:"flex flex-wrap gap-2"},e._l(e.languages,(function(n,i){return t("span",{key:"language-".concat(i),staticClass:"px-2 py-1 text-sm font-medium text-white rounded bg-neutral-900"},[e._v("\n          "+e._s(n)+"\n        ")])})),0),e._v(" "),t("Title",{staticClass:"mt-24",attrs:{size:"2"}},[e._v(" Role ")]),e._v(" "),t("p",{staticClass:"dark:text-white/70 ml-2"},[e._v("\n        Developer "),t("span",{staticClass:"mx-2"},[e._v("â€”")]),e._v(" I created the game from scratch, using the technologies listed above. Assets were created by\n        "),t("a",{staticClass:"underline underline-offset-6 hover:decoration-3",attrs:{href:"https://twitter.com/pixel_poem",target:"_blank"}},[e._v("@pixel_poem")]),e._v(", Thanks to him for letting me use them!\n      ")]),e._v(" "),t("Title",{staticClass:"mt-24",attrs:{size:"2"}},[e._v(" Context ")]),e._v(" "),t("div",{staticClass:"dark:text-white/70 ml-2"},[t("p",[e._v("\n          I created this game as part of my final year project for my Bachelor's degree in Computer Science. I wanted to create a game that I would enjoy playing, and I think I succeeded in that regard.\n        ")]),e._v(" "),t("p",{staticClass:"mt-4"},[t("u",[e._v("The game is still in development")]),e._v(", and I plan to add more features to it in the future. Beyond that, This project was a great learning experience for me, as I had never created a game before, and I learned a lot about game development and the challenges that come with it.\n        ")])])],1),e._v(" "),t("hr",{staticClass:"dark:border-white/10 border-2 rounded-full"}),e._v(" "),t("section",{staticClass:"space-y-4"},[t("Title",{attrs:{size:"1",uppercase:""}},[e._v(" In detail explanation")]),e._v(" "),t("Title",{staticClass:"!mt-12",attrs:{size:"2"}},[e._v(" What is Rogue? ")]),e._v(" "),t("p",{staticClass:"dark:text-white/70 ml-2"},[e._v("\n        Rogue is a roguelike-style game in which the player explores a dungeon infested with monsters that must be fought in order to gain experience and rewards. The dungeon is procedurally generated, meaning that each playthrough is different. Player death is permanent and inevitable. The goal of the game is to survive for as long as possible, using the treasures found and experience accumulated to improve the player's character.\n      ")]),e._v(" "),t("p",{staticClass:"dark:text-white/70 ml-2"},[e._v("\n        Everytime you play, the dungeon is different. The layout of the dungeon is randomly generated, and the monsters and items are also randomly generated. The game is a mix between a dungeon crawler and a roguelike. The game is inspired by Rogue and Dungeon Crawl Stone Soup.\n      ")]),e._v(" "),t("p",{staticClass:"dark:text-white/70 ml-2"},[e._v("\n        Unlike most roguelikes, Rogue is played in a browser, and is therefore accessible from any device. Using WebSockets, the game is synchronized across all devices, meaning that you can start a game on your computer, and continue it on your phone, or vice versa.\n      ")]),e._v(" "),t("Title",{staticClass:"!mt-12",attrs:{size:"2"}},[e._v(" What is a roguelike / Dungeon Crawler? ")]),e._v(" "),t("p",{staticClass:"dark:text-white/70 ml-2"},[e._v("\n        A roguelike is a subgenre of role-playing video games characterized by a dungeon crawl through procedurally generated levels, turn-based gameplay, tile-based graphics, and permanent death of the player character. Most roguelikes are based on a high fantasy narrative, reflecting their influence from tabletop role playing games such as Dungeons & Dragons\n      ")]),e._v(" "),t("p",{staticClass:"dark:text-white/70 ml-2"},[e._v("\n        Dungeon crawler is also a subgenre of role-playing video games in which the player navigates a labyrinthine environment, battling various monsters, and looting any treasure they may find. The term usually implies that the dungeon is the main (or only) area of the game, and many dungeon crawlers lack a overworld. Dungeon crawlers are often associated with first-person perspective, real-time gameplay, grid-based movement, and permanent death.\n      ")]),e._v(" "),t("Title",{staticClass:"!mt-12",attrs:{size:"1"}},[e._v(" Features ")]),e._v(" "),t("Title",{staticClass:"!mt-12",attrs:{size:"2"}},[e._v(" Procedurally generated dungeon ")]),e._v(" "),t("p",{staticClass:"dark:text-white/70 ml-2"},[e._v("\n        The dungeon is randomly generated each time you play, meaning that each playthrough is different.\n      ")]),e._v(" "),t("p",{staticClass:"dark:text-white/70 ml-2"},[e._v("\n        Generation is based on the "),t("a",{staticClass:"underline underline-offset-6 hover:decoration-3",attrs:{href:"http://www.roguebasin.com/index.php/Dungeon-Building_Algorithm",target:"_blank"}},[e._v("Tyrant algorithm")]),e._v(". This algorithm works by dividing the dungeon space into a 2D array of cells, where each cell can be either a wall or a floor tile. The algorithm then iteratively applies a set of rules to determine the state of each cell in the next generation, based on the state of its neighboring cells.\n      ")]),e._v(" "),t("p",{staticClass:"dark:text-white/70 ml-2"},[e._v("\n        For example, one rule might be that if a floor cell is surrounded by at least three wall cells, it should become a wall cell in the next generation. Another rule might be that if a wall cell is surrounded by at least three floor cells, it should become a floor cell in the next generation. These rules, when applied iteratively, can create a randomized layout that resembles a dungeon.\n      ")]),e._v(" "),t("p",{staticClass:"dark:text-white/70 ml-2"},[e._v("\n        The algorithm is deterministic, meaning that the same seed will always generate the same dungeon.\n      ")]),e._v(" "),t("p",{staticClass:"dark:text-white/70 ml-2"},[e._v("\n        You can read more about the algorithm and its implementation in my article :\n      ")]),e._v(" "),t("LastFm",{staticClass:"ml-2",attrs:{image:"https://cdn.discordapp.com/attachments/1071595350437134456/1103355340407451698/68747470733a2f2f63646e2e646973636f72646170702e636f6d2f6174746163686d656e74732f3835333535343334363135303436313435302f313038373937383538393932313735393236322f726f6775654368616d702e676966.gif",url:"",name:"Procedural generation in nodejs",artist:"JÃ©rÃ©my Caruelle"}}),e._v(" "),t("Title",{staticClass:"!mt-12",attrs:{size:"2"}},[e._v(" 2D tile-based graphics ")]),e._v(" "),t("p",{staticClass:"dark:text-white/70 ml-2"},[e._v("\n        The game uses a 2D tile-based graphics system. Each tile is represented by a single character, and the entire dungeon is represented by a 2D array of characters. The player and monsters are also represented by characters, and their position in the dungeon is represented by their position in the 2D array.\n      ")]),e._v(" "),t("p",{staticClass:"dark:text-white/70 ml-2"},[e._v("\n        For example, the player might be represented by the character '@', and the monsters might be represented by the characters 'g' and 'o'. The player's position in the dungeon might be represented by the coordinates (x, y), where x is the column number and y is the row number.\n      ")]),e._v(" "),t("div",{staticClass:"dark:text-white/70 ml-2 text-xs card-base rounded-lg overflow-x-auto"},[t("pre",{staticClass:"mx-auto",staticStyle:{width:"fit-content"}},[e._v("                                                                        ###############\n#####                                                                   #.............#\n#...#                                                                   #.............#\n#...#                                                                   #.............#\n#.?.#                                        ############################.............#\n#...#                                        #======.....+............../.............#\n#+###                                        #====...o...##########.#####.............#\n#.#                                          #===........#        #.#   ####/##########\n#.#                                          #############        #.#      #.#\n#.#                                                               #.#      #.#\n#.#                                                               #.#      #.#\n#.#        ########################################################.#      #.#######\n#.#        #$$$.........+...........................................#      #......^#\n#.#        #............#############################################      #########\n#.##########............#\n#........../............#\n#.#######################\n#.#\n#.#\n#.#\n#.#\n#.##                                                        #########         #########\n#..##                                                       #.......###########.......#\n##.O#                                                       #......./........./.......#\n##.#                                                #########.......###########.......#\n##..#                                               #.......+.......#         #.......#\n#..##                                               #.###############         #.......#\n#.##                                                #.#              ##########.......#\n#.#                                                 #.#              #......../.......#\n#.#            ######################################.################.########.......#\n#.#            #...........g..........................................@#      #.....k.#\n#.#            #.#######################################################      #.......#\n#.##############.#                                                            #..D>...#\n#!...............#                                                            #.......#\n##################                                                            #########")])]),e._v(" "),t("p",{staticClass:"dark:text-white/70 ml-2"},[e._v("\n        Now, we have an ASCII representation of the dungeon, but we need to convert it into a graphical representation. This is done by mapping each character to a tile image. For example, the character '@' might be mapped to a tile image of a player character, and the character 'g' might be mapped to a tile image of a goblin.\n      ")]),e._v(" "),t("SmartFigure",{staticClass:"max-w-xl mx-auto p-4",attrs:{src:e.images[1],border:"",caption:"Example of entity tileset created by @pixel_poem"}})],1)],1)}),[],!1,null,null,null);t.default=component.exports;installComponents(component,{SmartFigure:n(387).default,Title:n(265).default,PageLayout:n(380).default})}}]);