{"version":3,"file":"components/card-discord.js","sources":["webpack:///./src/components/Card/Discord.vue","webpack:///./src/components/Card/Discord.vue?d4cf","webpack:///./src/components/Card/Discord.vue?c347","webpack:///./src/components/Card/Discord.vue?3af1","webpack:///./src/assets/files/premid/largeImages.ts","webpack:///./src/assets/files/premid/smallImages.ts"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return (_vm.componentReady)?_c('div',{staticClass:\"rounded-md bg-[#6c82cf] w-full py-4 px-6 overflow-x-hidden dark:bg-neutral-800/40\"},[_vm._ssrNode(\"<div class=\\\"pt-2\\\">\",\"</div>\",[_vm._ssrNode(\"<h1 class=\\\"font-semibold text-xs text-white uppercase dark:text-gray-100\\\">\\n      Playing a game\\n    </h1> \"),_vm._ssrNode(\"<div class=\\\"flex flex-col space-y-3 items-center justify-between overflow-x-hidden md:space-y-0 md:space-x-3 md:flex-row\\\">\",\"</div>\",[_vm._ssrNode(\"<div\"+(_vm._ssrClass(\"flex space-x-3 w-full py-2 items-center overflow-x-hidden md:space-x-5\",_vm.buttons.length > 0 && 'md:w-2/3'))+\">\",\"</div>\",[_vm._ssrNode(\"<div class=\\\"flex-shrink-0 h-32 w-32 relative\\\">\",\"</div>\",[_c('SmartImage',{key:_vm.getImages.largeImage,staticClass:\"rounded-xl\",attrs:{\"src\":_vm.getImages.largeImage,\"alt\":\"large image\",\"height\":\"256\",\"width\":\"256\"}}),_vm._ssrNode(\" \"),(_vm.getImages.smallImage)?_c('SmartImage',{directives:[{name:\"tippy\",rawName:\"v-tippy\",value:({\n              content: _vm.getText.small,\n              placement: 'top',\n            }),expression:\"{\\n              content: getText.small,\\n              placement: 'top',\\n            }\"}],key:_vm.getImages.smallImage,staticClass:\"rounded-full bg-[#6c82cf] h-9 -right-2 -bottom-2 ring-4 ring-[#6c82cf] w-9 overflow-y-hidden absolute box-border dark:bg-transparent dark:ring-transparent focus:outline-none\",attrs:{\"src\":_vm.getImages.smallImage,\"alt\":\"small image\"}}):_vm._e()],2),_vm._ssrNode(\" <div class=\\\"text-gray-100 overflow-x-hidden\\\"><h1 class=\\\"font-medium text-xl text-white block\\\">\"+_vm._ssrEscape(_vm._s(_vm.title))+\"</h1> <div class=\\\"leading-tight\\\"><span class=\\\"block truncate\\\">\"+_vm._ssrEscape(_vm._s(_vm.getText.details))+\"</span> <span class=\\\"block truncate\\\">\"+_vm._ssrEscape(_vm._s(_vm.getText.state))+\"</span> \"+((_vm.isTimerEnabled === true)?(\"<span class=\\\"text-sm block\\\">\"+_vm._ssrEscape(_vm._s(_vm.getTime))+\"</span>\"):\"<!---->\")+\"</div></div>\")],2),_vm._ssrNode(\" \"),(_vm.buttons.length > 0)?_vm._ssrNode(\"<div class=\\\"flex flex-col space-y-2 flex-shrink-0 md:w-1/3\\\">\",\"</div>\",_vm._l((_vm.buttons),function(button,index){return _vm._ssrNode(\"<div class=\\\"flex justify-end\\\">\",\"</div>\",[_c('SmartLink',{staticClass:\"border rounded-sm cursor-pointer border-white/40 text-sm py-2 px-4 transition-colors text-gray-300 truncate select-none md:px-3 md:py-1 hover:text-white hover:border-white focus:bg-opacity-10 focus:bg-white\",attrs:{\"href\":button.url,\"title\":button.url,\"blank\":\"\"}},[_vm._v(_vm._s(button.label))])],1)}),0):_vm._e()],2)],2)]):_c('div',{staticClass:\"rounded-md bg-[#6c82cf] h-[12.5rem] w-full animate-pulse\"},[])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n/* eslint-disable no-undef */\r\n\r\nimport Vue, { PropType } from \"vue\"\r\n\r\n/* Import image files */\r\nimport largeImages from \"@/assets/files/premid/largeImages\"\r\nimport smallImages from \"@/assets/files/premid/smallImages\"\r\n\r\n/* Interfaces */\r\ninterface ImageCategory {\r\n  name: string\r\n  url: string\r\n}\r\n\r\nexport default Vue.extend({\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      required: false,\r\n      default: \"Custom Status\",\r\n    },\r\n    largeImage: {\r\n      type: String,\r\n      required: false,\r\n      default: \"PreMiD\",\r\n    },\r\n    smallImage: {\r\n      type: String,\r\n      required: false,\r\n      default: null,\r\n    },\r\n    smallImageText: {\r\n      type: String,\r\n      required: false,\r\n      default: null,\r\n    },\r\n    details: {\r\n      type: String,\r\n      required: false,\r\n      default: \"\",\r\n    },\r\n    buttons: {\r\n      type: Array as PropType<{ label: string; url: string }[]>,\r\n      required: false,\r\n      default: () => [],\r\n    },\r\n    state: {\r\n      type: String,\r\n      required: false,\r\n      default: \"\",\r\n    },\r\n    customImageUrl: {\r\n      type: Object as PropType<{ small: string; large: string }>,\r\n      required: false,\r\n      default: () => ({ small: \"\", large: \"\" }),\r\n    },\r\n    timestamp: {\r\n      type: Object,\r\n      required: false,\r\n      default: () => ({}),\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      componentReady: false,\r\n      timers: {\r\n        elapsed: {\r\n          instance: null as NodeJS.Timeout | null,\r\n          string: \"\",\r\n        },\r\n        end: {\r\n          instance: null as NodeJS.Timeout | null,\r\n          string: \"\",\r\n        },\r\n      },\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * Returns large and small image by replacing the spaces in their name.\r\n     * @returns {{largeImage: string, smallImage: string}}\r\n     */\r\n    getImages(): { largeImage: string; smallImage: string | null } {\r\n      const { largeImage, smallImage } = this\r\n\r\n      /* Map arrays and combine items in all categories */\r\n      const largeAll: ImageCategory[] = []\r\n      const smallAll: ImageCategory[] = []\r\n\r\n      /* Loop into all arrays inside items and combine them in a single array */\r\n      largeImages\r\n        .map((item) => item.items)\r\n        .forEach((category) => largeAll.push(...category))\r\n\r\n      smallImages\r\n        .map((item) => item.items)\r\n        .forEach((category) => smallAll.push(...category))\r\n\r\n      return {\r\n        largeImage: this.customImageUrl.large\r\n          ? largeImage\r\n          : largeAll.find((item) => item.name === largeImage)?.url ||\r\n            \"https://i.imgur.com/CuVtvKW.png\",\r\n        smallImage: this.customImageUrl.small\r\n          ? smallImage\r\n          : smallAll.find((item) => item.name === smallImage)?.url || null,\r\n      }\r\n    },\r\n    /**\r\n     * Returns text related parts for the UI.\r\n     * @returns {{details: string, state: string, small: string | undefined}}\r\n     */\r\n    getText(): { details: string; state: string; small: string | undefined } {\r\n      const { smallImage, smallImageText, details, state } = this\r\n\r\n      let small\r\n\r\n      if (smallImage && smallImageText) small = smallImageText\r\n      else if (smallImage && !smallImageText) small = \"[EMPTY]\"\r\n\r\n      return {\r\n        details,\r\n        state,\r\n        small,\r\n      }\r\n    },\r\n    /**\r\n     * Checks if timers are enabled, starts or stops timers according to passed props.\r\n     * @returns {boolean} Whether any timer is enabled or not.\r\n     */\r\n    isTimerEnabled(): boolean {\r\n      const start = this?.timestamp?.start\r\n      const end = this?.timestamp?.end\r\n\r\n      if (start?.enabled && start?.value) {\r\n        this.startElapsedTimer()\r\n        return true\r\n      } else if (end?.enabled && end?.value) {\r\n        this.startLeftTimer()\r\n        return true\r\n      } else {\r\n        this.stopTimers()\r\n        return false\r\n      }\r\n    },\r\n    /**\r\n     * Returns the string for enabled timer.\r\n     * @returns {boolean |null | string}\r\n     */\r\n    getTime(): boolean | null | string {\r\n      if (this.isTimerEnabled === false) return null\r\n      else if (this.timers.elapsed?.instance) return this.timers.elapsed.string\r\n      else if (this.timers.end?.instance) return this.timers.end.string\r\n      else return null\r\n    },\r\n  },\r\n  mounted() {\r\n    this.componentReady = true\r\n  },\r\n  beforeDestroy() {\r\n    this.stopTimers()\r\n  },\r\n  methods: {\r\n    /**\r\n     * Stops both of the timers.\r\n     */\r\n    stopTimers() {\r\n      const { elapsed, end } = this.timers\r\n\r\n      if (typeof elapsed === \"boolean\" && typeof end === \"boolean\") return\r\n\r\n      /* Clear elapsed timer */\r\n\r\n      // @ts-ignore-next-line\r\n      clearInterval(elapsed.instance)\r\n      elapsed.instance = null\r\n      elapsed.string = \"\"\r\n\r\n      /* Clear end timer */\r\n\r\n      // @ts-ignore-next-line\r\n      clearInterval(end.instance)\r\n      end.instance = null\r\n      end.string = \"\"\r\n    },\r\n    /**\r\n     * Calculates the time difference between now and selected time and starts the elapsed timer.\r\n     */\r\n    startElapsedTimer() {\r\n      const target = this?.timestamp?.start?.value\r\n      const timer = this?.timers?.elapsed\r\n\r\n      if (!target || !timer) return\r\n      this.stopTimers()\r\n\r\n      timer.string = \"00:00 elapsed\"\r\n      timer.instance = setInterval(() => {\r\n        let timeArray = [\r\n          String(this.$moment().diff(target, \"hours\")),\r\n          String(this.$moment().diff(target, \"minutes\") % 60),\r\n          String(this.$moment().diff(target, \"seconds\") % 60),\r\n        ]\r\n\r\n        if (timeArray[0] === \"0\") timeArray = timeArray.slice(1)\r\n        timeArray = timeArray.map((time) =>\r\n          time.length === 1 ? `0${time}` : time\r\n        )\r\n\r\n        timer.string = `${timeArray.join(\":\")} elapsed`\r\n      }, 1000)\r\n    },\r\n    /**\r\n     * Calculates the time difference between now and selected time and starts the elapsed timer.\r\n     */\r\n    startLeftTimer() {\r\n      const target = this?.timestamp?.end?.value\r\n      const timer = this?.timers?.end\r\n\r\n      if (!target || !timer) return\r\n      this.stopTimers()\r\n\r\n      timer.string = \"--:-- left\"\r\n      timer.instance = setInterval(() => {\r\n        const toTime = this.$moment(target, \"HH:mm\").unix()\r\n        const fromTime = this.$moment().unix()\r\n        const duration = this.$moment.duration(toTime - fromTime, \"seconds\")\r\n\r\n        if (duration.asSeconds() < 0) return (timer.string = \"00:00 left\")\r\n\r\n        let timeArray = [\r\n          String(duration.hours()),\r\n          String(duration.minutes()),\r\n          String(duration.seconds()),\r\n        ]\r\n\r\n        if (timeArray[0] === \"0\") timeArray = timeArray.slice(1)\r\n        timeArray = timeArray.map((time) =>\r\n          time.length === 1 ? `0${time}` : time\r\n        )\r\n\r\n        timer.string = `${timeArray.join(\":\")} left`\r\n      }, 1000)\r\n    },\r\n  },\r\n})\r\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--12-0!../../../node_modules/ts-loader/index.js??ref--12-1!../../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/windicss-webpack-plugin/dist/loaders/windicss-template.cjs!./Discord.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--12-0!../../../node_modules/ts-loader/index.js??ref--12-1!../../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/windicss-webpack-plugin/dist/loaders/windicss-template.cjs!./Discord.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Discord.vue?vue&type=template&id=41eddaf7&\"\nimport script from \"./Discord.vue?vue&type=script&lang=ts&\"\nexport * from \"./Discord.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  \"4f8c9bb4\"\n  \n)\n\nexport default component.exports\n\n/* nuxt-component-imports */\ninstallComponents(component, {SmartImage: require('C:/Users/Asgarrrr/Desktop/test3432/src/components/Smart/Image.vue').default,SmartLink: require('C:/Users/Asgarrrr/Desktop/test3432/src/components/Smart/Link.vue').default})\n","const general = [\r\n  { name: \"Extreme Thinking\", url: \"https://i.imgur.com/IJbthB1.png\" },\r\n  { name: \"Angry Stickman\", url: \"https://i.imgur.com/90lDk9T.png\" },\r\n  { name: \"Read The Docs\", url: \"https://i.imgur.com/PvrqhRJ.png\" },\r\n  { name: \"Please Stop\", url: \"https://i.imgur.com/qgCcDu7.png\" },\r\n  { name: \"Brilliance\", url: \"https://i.imgur.com/skclu5h.png\" },\r\n  { name: \"Pepe Sweat\", url: \"https://i.imgur.com/j4ip0Dx.png\" },\r\n  { name: \"Panda Cry\", url: \"https://i.imgur.com/NFCmYsM.png\" },\r\n  { name: \"Thinking\", url: \"https://i.imgur.com/mzlKBw3.png\" },\r\n  { name: \"Spongery\", url: \"https://i.imgur.com/VfhmSfN.png\" },\r\n  { name: \"Balance\", url: \"https://i.imgur.com/v0jG4vt.png\" },\r\n  { name: \"Bravery\", url: \"https://i.imgur.com/etvIz6E.png\" },\r\n  { name: \"Playing\", url: \"https://i.imgur.com/UHgwoyQ.png\" },\r\n  { name: \"Reading\", url: \"https://i.imgur.com/tbSYfJV.png\" },\r\n  { name: \"Popcorn\", url: \"https://i.imgur.com/dQ4EOWV.png\" },\r\n  { name: \"Windows\", url: \"https://i.imgur.com/YkOU4HD.png\" },\r\n  { name: \"Mobile\", url: \"https://i.imgur.com/BhBThRQ.png\" },\r\n  { name: \"Paused\", url: \"https://i.imgur.com/TYvgF3M.png\" },\r\n  { name: \"Search\", url: \"https://i.imgur.com/hnDIQO1.png\" },\r\n  { name: \"Please\", url: \"https://i.imgur.com/Zp835mC.png\" },\r\n  { name: \"Sadcat\", url: \"https://i.imgur.com/IaSeSJk.png\" },\r\n  { name: \"Coffee\", url: \"https://i.imgur.com/W5NIvJF.png\" },\r\n  { name: \"Doubt\", url: \"https://i.imgur.com/kYKE2rI.png\" },\r\n  { name: \"Relax\", url: \"https://i.imgur.com/BaOQ4I8.png\" },\r\n  { name: \"Smart\", url: \"https://i.imgur.com/vKhMs2R.png\" },\r\n  { name: \"Heart\", url: \"https://i.imgur.com/jtt9fjf.png\" },\r\n  { name: \"Shrug\", url: \"https://i.imgur.com/UnzU96q.png\" },\r\n  { name: \"Mmlol\", url: \"https://i.imgur.com/5t2q2eu.png\" },\r\n  { name: \"Linux\", url: \"https://i.imgur.com/bN5rmiU.png\" },\r\n  { name: \"Live\", url: \"https://i.imgur.com/qphbAuR.png\" },\r\n  { name: \"Cool\", url: \"https://i.imgur.com/AdUBBHa.png\" },\r\n  { name: \"Eyes\", url: \"https://i.imgur.com/lIa90i4.png\" },\r\n  { name: \"Ohno\", url: \"https://i.imgur.com/7EkHsMr.png\" },\r\n  { name: \"Tada\", url: \"https://i.imgur.com/nO8fd9v.png\" },\r\n  { name: \"ESL\", url: \"https://i.imgur.com/F51eSEx.png\" },\r\n]\r\n\r\nconst brand = [\r\n  { name: \"Facebook\", url: \"https://i.imgur.com/5Aab3v6.png\" },\r\n  { name: \"Instagram\", url: \"https://i.imgur.com/1c5yuiD.png\" },\r\n  { name: \"YouTube\", url: \"https://i.imgur.com/0Bvl6BU.png\" },\r\n  { name: \"YouTube Dark\", url: \"https://i.imgur.com/mQQO1nv.jpg\" },\r\n  { name: \"Netflix\", url: \"https://i.imgur.com/DkZQvkC.png\" },\r\n  { name: \"Twitter\", url: \"https://i.imgur.com/AtV70mE.png\" },\r\n  { name: \"Twitch\", url: \"https://i.imgur.com/bmIsItf.png\" },\r\n  { name: \"Discord\", url: \"https://i.imgur.com/P6fs8jR.png\" },\r\n  { name: \"Discord Templates\", url: \"https://i.imgur.com/zqdRKw4.png\" },\r\n]\r\n\r\n/* Exports */\r\nexport default [\r\n  {\r\n    name: \"General\",\r\n    items: general,\r\n  },\r\n  {\r\n    name: \"Brand\",\r\n    items: brand,\r\n  },\r\n]\r\n\r\nexport interface Type {\r\n  name: string\r\n  items: {\r\n    name: string\r\n    url: string\r\n  }[]\r\n}\r\n","const general = [\r\n  { name: \"DoNotDisturb\", url: \"https://i.imgur.com/MvrnrMW.png\" },\r\n  { name: \"Brilliance\", url: \"https://i.imgur.com/skclu5h.png\" },\r\n  { name: \"VideoCall\", url: \"https://i.imgur.com/GwMdYmz.png\" },\r\n  { name: \"Checkmark\", url: \"https://i.imgur.com/FH7OH6y.png\" },\r\n  { name: \"Thinking\", url: \"https://i.imgur.com/mzlKBw3.png\" },\r\n  { name: \"Windows\", url: \"https://i.imgur.com/YkOU4HD.png\" },\r\n  { name: \"NoEntry\", url: \"https://i.imgur.com/jVidfcx.png\" },\r\n  { name: \"Balance\", url: \"https://i.imgur.com/v0jG4vt.png\" },\r\n  { name: \"Bravery\", url: \"https://i.imgur.com/etvIz6E.png\" },\r\n  { name: \"Playing\", url: \"https://i.imgur.com/UHgwoyQ.png\" },\r\n  { name: \"Writing\", url: \"https://i.imgur.com/4VcqgYA.png\" },\r\n  { name: \"Reading\", url: \"https://i.imgur.com/tbSYfJV.png\" },\r\n  { name: \"Coffee\", url: \"https://i.imgur.com/W5NIvJF.png\" },\r\n  { name: \"Online\", url: \"https://i.imgur.com/8cel80u.png\" },\r\n  { name: \"Please\", url: \"https://i.imgur.com/d10KCzD.png\" },\r\n  { name: \"Paused\", url: \"https://i.imgur.com/TYvgF3M.png\" },\r\n  { name: \"Search\", url: \"https://i.imgur.com/hnDIQO1.png\" },\r\n  { name: \"Mmlol\", url: \"https://i.imgur.com/5t2q2eu.png\" },\r\n  { name: \"Heart\", url: \"https://i.imgur.com/jtt9fjf.png\" },\r\n  { name: \"Linux\", url: \"https://i.imgur.com/bN5rmiU.png\" },\r\n  { name: \"Live\", url: \"https://i.imgur.com/qphbAuR.png\" },\r\n  { name: \"Call\", url: \"https://i.imgur.com/0akjqyz.png\" },\r\n  { name: \"Idle\", url: \"https://i.imgur.com/mKIQ8Zo.png\" },\r\n  { name: \"Cool\", url: \"https://i.imgur.com/AdUBBHa.png\" },\r\n  { name: \"Tada\", url: \"https://i.imgur.com/nO8fd9v.png\" },\r\n]\r\n\r\nconst brand = [\r\n  { name: \"YouTube\", url: \"https://i.imgur.com/0Bvl6BU.png\" },\r\n  { name: \"YouTube Dark\", url: \"https://i.imgur.com/mQQO1nv.jpg\" },\r\n  { name: \"Netflix\", url: \"https://i.imgur.com/DkZQvkC.png\" },\r\n  { name: \"Twitter\", url: \"https://i.imgur.com/AtV70mE.png\" },\r\n  { name: \"Twitch\", url: \"https://i.imgur.com/bmIsItf.png\" },\r\n  { name: \"Discord\", url: \"https://i.imgur.com/P6fs8jR.png\" },\r\n]\r\n\r\n/* Exports */\r\nexport default [\r\n  {\r\n    name: \"General\",\r\n    items: general,\r\n  },\r\n  {\r\n    name: \"Brand\",\r\n    items: brand,\r\n  },\r\n]\r\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;ACJA;AAEA;AAEA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;AAIA;;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAIA;AACA;AAIA;AAGA;AACA;AACA;;;;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAMA;AACA;AAIA;AACA;AACA;AACA;;;AAGA;;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAMA;AACA;AAIA;AACA;AACA;;AAEA;;ACrPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrsourceRoot":""}